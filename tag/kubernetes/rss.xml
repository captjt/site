<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>jt.codes</title>
   
   <link>https://jt.codes/</link>
   <description>My development story begins here.</description>
   <language>en-uk</language>
   <managingEditor> Jordan Taylor</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Hacking Kubernetes</title>
	  <link>//Hacking-Kubernetes/</link>
	  <author>Jordan Taylor</author>
	  <pubDate>2017-08-12T05:00:00+00:00</pubDate>
	  <guid>//Hacking-Kubernetes/</guid>
	  <description><![CDATA[
	     <h2 id="what-is-kubernetes">What is Kubernetes?</h2>

<p>Most people in tech have at least heard of Kubernetes. If you haven’t here’s an excerpt from <a href="https://kubernetes.io/">Kubernetes.io</a> – <em>“Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications”</em>.</p>

<p>To understand what this article is about you’ll need to know what <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/">Kubernetes objects</a> are.</p>

<h2 id="why-hack-against-k8s">Why Hack Against k8s?</h2>

<p>The biggest reason for hacking against the Kubernetes’ API is purely for custom automated actions to build on top of the already automated infrastructure it provides.</p>

<p>I wanted to build a manager that can create/delete/update deployments and services within a specific namespace in Kubernetes. You can think of a web service that run a very small portion of what <code class="highlighter-rouge">kubectl</code> does.</p>

<p><em>Note: There are <strong>so</strong> many things you can do with Kubernetes’ API – what I am going to walk through is only scratching the surface. These code excerpts are also implemented in Go and import the <a href="https://github.com/kubernetes/client-go">client-go</a> library.</em></p>

<h2 id="the-controller">The Controller</h2>

<p>I decided my Kubernetes <em>Manager</em> needed to implement 3 basic methods to receive, update and delete deployments/services in Kubernetes. So I made 4 interfaces.</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="c">// A Controller is the interface to manage Kubernetes resources within a</span><span class="x">
</span><span class="c">// Kubernetes clusters.</span><span class="x">
</span><span class="k">type</span><span class="x"> </span><span class="n">Controller</span><span class="x"> </span><span class="k">interface</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="n">Deleter</span><span class="x">
  </span><span class="n">Deployer</span><span class="x">
  </span><span class="n">Getter</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Deleter represents a Kubernetes delete operation.</span><span class="x">
</span><span class="k">type</span><span class="x"> </span><span class="n">Deleter</span><span class="x"> </span><span class="k">interface</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="n">Delete</span><span class="p">(</span><span class="n">name</span><span class="x"> </span><span class="kt">string</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Deployer represents a Kubernetes deploy operation.</span><span class="x">
</span><span class="k">type</span><span class="x"> </span><span class="n">Deployer</span><span class="x"> </span><span class="k">interface</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="n">Deploy</span><span class="p">(</span><span class="n">image</span><span class="p">,</span><span class="x"> </span><span class="n">name</span><span class="x"> </span><span class="kt">string</span><span class="p">,</span><span class="x"> </span><span class="n">port</span><span class="x"> </span><span class="kt">int</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Getter represents a Kubernetes get operation.</span><span class="x">
</span><span class="k">type</span><span class="x"> </span><span class="n">Getter</span><span class="x"> </span><span class="k">interface</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="n">Get</span><span class="p">(</span><span class="n">name</span><span class="x"> </span><span class="kt">string</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Manager models the Kubernetes required client settings to interact with a</span><span class="x">
</span><span class="c">// specific cluster. This Manager will implement our Controller interface.</span><span class="x">
</span><span class="k">type</span><span class="x"> </span><span class="n">Manager</span><span class="x"> </span><span class="k">struct</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="n">clientSet</span><span class="x">       </span><span class="o">*</span><span class="n">kubernetes</span><span class="o">.</span><span class="n">Clientset</span><span class="x">
  </span><span class="n">namespace</span><span class="x">       </span><span class="kt">string</span><span class="x">
  </span><span class="n">imagePullSecret</span><span class="x"> </span><span class="kt">string</span><span class="x">
</span><span class="p">}</span><span class="x">
</span></code></pre>
</div>

<h2 id="deployer">Deployer</h2>

<p>When deploying an application onto our Kubernetes cluster I decided to make it simple enough to just take an image’s name, a unique application’s name and what port the image needs to be exposed on.</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="c">// Modeling the deployment operation we need.</span><span class="x">
</span><span class="k">type</span><span class="x"> </span><span class="n">deployOperation</span><span class="x"> </span><span class="k">struct</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="n">image</span><span class="x">    </span><span class="kt">string</span><span class="x">
  </span><span class="n">name</span><span class="x">     </span><span class="kt">string</span><span class="x">
  </span><span class="n">port</span><span class="x">     </span><span class="kt">int</span><span class="x">
  </span><span class="n">replicas</span><span class="x"> </span><span class="kt">int</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Deploy will deploy a service and a deployment with a specific image, name and</span><span class="x">
</span><span class="c">// port specified for deployment.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="p">(</span><span class="n">m</span><span class="x"> </span><span class="o">*</span><span class="n">Manager</span><span class="p">)</span><span class="x"> </span><span class="n">Deploy</span><span class="p">(</span><span class="n">image</span><span class="p">,</span><span class="x"> </span><span class="n">name</span><span class="x"> </span><span class="kt">string</span><span class="p">,</span><span class="x"> </span><span class="n">port</span><span class="x"> </span><span class="kt">int</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x"> </span><span class="p">{</span><span class="x">

  </span><span class="n">op</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="o">&amp;</span><span class="n">deployOperation</span><span class="p">{</span><span class="x">
    </span><span class="n">image</span><span class="o">:</span><span class="x"> </span><span class="n">image</span><span class="p">,</span><span class="x">
    </span><span class="n">name</span><span class="o">:</span><span class="x">  </span><span class="n">name</span><span class="p">,</span><span class="x">
    </span><span class="n">port</span><span class="o">:</span><span class="x">  </span><span class="n">port</span><span class="p">,</span><span class="x">
    </span><span class="n">replicas</span><span class="o">:</span><span class="x"> </span><span class="m">2</span><span class="p">,</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">if</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">doDeployment</span><span class="p">(</span><span class="n">op</span><span class="p">);</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">!=</span><span class="x"> </span><span class="no">nil</span><span class="x"> </span><span class="p">{</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="n">err</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">if</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">doService</span><span class="p">(</span><span class="n">op</span><span class="p">);</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">!=</span><span class="x"> </span><span class="no">nil</span><span class="x"> </span><span class="p">{</span><span class="x">
	</span><span class="k">return</span><span class="x"> </span><span class="n">err</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Create/update the new Deployment within the namespace. The resources defined</span><span class="x">
</span><span class="c">// for the deployment are very minimal with CPU limited at 100m and CPU memory</span><span class="x">
</span><span class="c">// limited at 256Mi.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="p">(</span><span class="n">m</span><span class="x"> </span><span class="o">*</span><span class="n">Manager</span><span class="p">)</span><span class="x"> </span><span class="n">doDeployment</span><span class="p">(</span><span class="n">op</span><span class="x"> </span><span class="o">*</span><span class="n">deployOperation</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x"> </span><span class="p">{</span><span class="x">

  </span><span class="n">appName</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">op</span><span class="o">.</span><span class="n">name</span><span class="x">

  </span><span class="c">// Define the Deployments spec.</span><span class="x">
  </span><span class="n">deploySpec</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="o">&amp;</span><span class="n">v1beta1</span><span class="o">.</span><span class="n">Deployment</span><span class="p">{</span><span class="x">
    </span><span class="n">TypeMeta</span><span class="o">:</span><span class="x"> </span><span class="n">unversioned</span><span class="o">.</span><span class="n">TypeMeta</span><span class="p">{</span><span class="x">
    </span><span class="n">Kind</span><span class="o">:</span><span class="x">       </span><span class="s">"Deployment"</span><span class="p">,</span><span class="x">
      </span><span class="n">APIVersion</span><span class="o">:</span><span class="x"> </span><span class="s">"extensions/v1beta1"</span><span class="p">,</span><span class="x">
    </span><span class="p">},</span><span class="x">
    </span><span class="n">ObjectMeta</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">ObjectMeta</span><span class="p">{</span><span class="x">
      </span><span class="n">Name</span><span class="o">:</span><span class="x"> </span><span class="n">appName</span><span class="p">,</span><span class="x">
    </span><span class="p">},</span><span class="x">
    </span><span class="n">Spec</span><span class="o">:</span><span class="x"> </span><span class="n">v1beta1</span><span class="o">.</span><span class="n">DeploymentSpec</span><span class="p">{</span><span class="x">
      </span><span class="n">Replicas</span><span class="o">:</span><span class="x"> </span><span class="n">int32p</span><span class="p">(</span><span class="n">op</span><span class="o">.</span><span class="n">replicas</span><span class="p">),</span><span class="x">
      </span><span class="n">Strategy</span><span class="o">:</span><span class="x"> </span><span class="n">v1beta1</span><span class="o">.</span><span class="n">DeploymentStrategy</span><span class="p">{</span><span class="x">
        </span><span class="n">Type</span><span class="o">:</span><span class="x"> </span><span class="n">v1beta1</span><span class="o">.</span><span class="n">RollingUpdateDeploymentStrategyType</span><span class="p">,</span><span class="x">
        </span><span class="n">RollingUpdate</span><span class="o">:</span><span class="x"> </span><span class="o">&amp;</span><span class="n">v1beta1</span><span class="o">.</span><span class="n">RollingUpdateDeployment</span><span class="p">{</span><span class="x">
          </span><span class="n">MaxUnavailable</span><span class="o">:</span><span class="x"> </span><span class="o">&amp;</span><span class="n">intstr</span><span class="o">.</span><span class="n">IntOrString</span><span class="p">{</span><span class="x">
            </span><span class="n">Type</span><span class="o">:</span><span class="x">   </span><span class="n">intstr</span><span class="o">.</span><span class="n">Int</span><span class="p">,</span><span class="x">
            </span><span class="n">IntVal</span><span class="o">:</span><span class="x"> </span><span class="kt">int32</span><span class="p">(</span><span class="m">0</span><span class="p">),</span><span class="x">
          </span><span class="p">},</span><span class="x">
          </span><span class="n">MaxSurge</span><span class="o">:</span><span class="x"> </span><span class="o">&amp;</span><span class="n">intstr</span><span class="o">.</span><span class="n">IntOrString</span><span class="p">{</span><span class="x">
            </span><span class="n">Type</span><span class="o">:</span><span class="x">   </span><span class="n">intstr</span><span class="o">.</span><span class="n">Int</span><span class="p">,</span><span class="x">
            </span><span class="n">IntVal</span><span class="o">:</span><span class="x"> </span><span class="kt">int32</span><span class="p">(</span><span class="m">1</span><span class="p">),</span><span class="x">
          </span><span class="p">},</span><span class="x">
        </span><span class="p">},</span><span class="x">
      </span><span class="p">},</span><span class="x">
      </span><span class="n">RevisionHistoryLimit</span><span class="o">:</span><span class="x"> </span><span class="n">int32p</span><span class="p">(</span><span class="m">10</span><span class="p">),</span><span class="x">
      </span><span class="n">Template</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">PodTemplateSpec</span><span class="p">{</span><span class="x">
        </span><span class="n">ObjectMeta</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">ObjectMeta</span><span class="p">{</span><span class="x">
          </span><span class="n">Name</span><span class="o">:</span><span class="x">   </span><span class="n">appName</span><span class="p">,</span><span class="x">
          </span><span class="n">Labels</span><span class="o">:</span><span class="x"> </span><span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">string</span><span class="p">{</span><span class="s">"app"</span><span class="o">:</span><span class="x"> </span><span class="n">appName</span><span class="p">},</span><span class="x">
        </span><span class="p">},</span><span class="x">
        </span><span class="n">Spec</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">PodSpec</span><span class="p">{</span><span class="x">
          </span><span class="n">ImagePullSecrets</span><span class="o">:</span><span class="x"> </span><span class="p">[]</span><span class="n">v1</span><span class="o">.</span><span class="n">LocalObjectReference</span><span class="p">{</span><span class="x">
            </span><span class="p">{</span><span class="x">
              </span><span class="n">Name</span><span class="o">:</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">imagePullSecret</span><span class="p">,</span><span class="x">
            </span><span class="p">},</span><span class="x">
          </span><span class="p">},</span><span class="x">
          </span><span class="n">Containers</span><span class="o">:</span><span class="x"> </span><span class="p">[]</span><span class="n">v1</span><span class="o">.</span><span class="n">Container</span><span class="p">{</span><span class="x">
            </span><span class="n">v1</span><span class="o">.</span><span class="n">Container</span><span class="p">{</span><span class="x">
              </span><span class="n">Name</span><span class="o">:</span><span class="x">  </span><span class="n">op</span><span class="o">.</span><span class="n">name</span><span class="p">,</span><span class="x">
              </span><span class="n">Image</span><span class="o">:</span><span class="x"> </span><span class="n">op</span><span class="o">.</span><span class="n">image</span><span class="p">,</span><span class="x">
              </span><span class="n">Ports</span><span class="o">:</span><span class="x"> </span><span class="p">[]</span><span class="n">v1</span><span class="o">.</span><span class="n">ContainerPort</span><span class="p">{</span><span class="x">
                </span><span class="n">v1</span><span class="o">.</span><span class="n">ContainerPort</span><span class="p">{</span><span class="n">ContainerPort</span><span class="o">:</span><span class="x"> </span><span class="kt">int32</span><span class="p">(</span><span class="n">op</span><span class="o">.</span><span class="n">port</span><span class="p">),</span><span class="x"> </span><span class="n">Protocol</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">ProtocolTCP</span><span class="p">},</span><span class="x">
              </span><span class="p">},</span><span class="x">
              </span><span class="n">Resources</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">ResourceRequirements</span><span class="p">{</span><span class="x">
                </span><span class="n">Limits</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">ResourceList</span><span class="p">{</span><span class="x">
                  </span><span class="n">v1</span><span class="o">.</span><span class="n">ResourceCPU</span><span class="o">:</span><span class="x">    </span><span class="n">resource</span><span class="o">.</span><span class="n">MustParse</span><span class="p">(</span><span class="s">"100m"</span><span class="p">),</span><span class="x">
                  </span><span class="n">v1</span><span class="o">.</span><span class="n">ResourceMemory</span><span class="o">:</span><span class="x"> </span><span class="n">resource</span><span class="o">.</span><span class="n">MustParse</span><span class="p">(</span><span class="s">"256Mi"</span><span class="p">),</span><span class="x">
                </span><span class="p">},</span><span class="x">
              </span><span class="p">},</span><span class="x">
              </span><span class="n">ImagePullPolicy</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">PullIfNotPresent</span><span class="p">,</span><span class="x">
            </span><span class="p">},</span><span class="x">
          </span><span class="p">},</span><span class="x">
          </span><span class="n">RestartPolicy</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">RestartPolicyAlways</span><span class="p">,</span><span class="x">
          </span><span class="n">DNSPolicy</span><span class="o">:</span><span class="x">     </span><span class="n">v1</span><span class="o">.</span><span class="n">DNSClusterFirst</span><span class="p">,</span><span class="x">
        </span><span class="p">},</span><span class="x">
      </span><span class="p">},</span><span class="x">
    </span><span class="p">},</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="n">deploy</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">clientSet</span><span class="o">.</span><span class="n">Extensions</span><span class="p">()</span><span class="o">.</span><span class="n">Deployments</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">namespace</span><span class="p">)</span><span class="x">
  </span><span class="n">_</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">deploy</span><span class="o">.</span><span class="n">Update</span><span class="p">(</span><span class="n">deploySpec</span><span class="p">)</span><span class="x">
  </span><span class="k">switch</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">==</span><span class="x"> </span><span class="no">nil</span><span class="o">:</span><span class="x">
    </span><span class="n">log</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"deployment controller updated"</span><span class="p">)</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="o">!</span><span class="n">errors</span><span class="o">.</span><span class="n">IsNotFound</span><span class="p">(</span><span class="n">err</span><span class="p">)</span><span class="o">:</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"could not update deployment controller: %s"</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="p">)</span><span class="x">
  </span><span class="k">default</span><span class="o">:</span><span class="x">
    </span><span class="n">_</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">=</span><span class="x"> </span><span class="n">deploy</span><span class="o">.</span><span class="n">Create</span><span class="p">(</span><span class="n">deploySpec</span><span class="p">)</span><span class="x">
    </span><span class="k">if</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">!=</span><span class="x"> </span><span class="no">nil</span><span class="x"> </span><span class="p">{</span><span class="x">
      </span><span class="k">return</span><span class="x"> </span><span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"could not create deployment controller: %s"</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="p">)</span><span class="x">
    </span><span class="p">}</span><span class="x">
    </span><span class="n">log</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"deployment controller created"</span><span class="p">)</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Create/update the service within a namespace. It will be exposed on port 80,</span><span class="x">
</span><span class="c">// but will be using the target port of what was specified.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="p">(</span><span class="n">m</span><span class="x"> </span><span class="o">*</span><span class="n">Manager</span><span class="p">)</span><span class="x"> </span><span class="n">doService</span><span class="p">(</span><span class="n">op</span><span class="x"> </span><span class="o">*</span><span class="n">deployOperation</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x"> </span><span class="p">{</span><span class="x">

  </span><span class="n">appName</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">op</span><span class="o">.</span><span class="n">name</span><span class="x">

  </span><span class="c">// Define service spec.</span><span class="x">
  </span><span class="n">serviceSpec</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="o">&amp;</span><span class="n">v1</span><span class="o">.</span><span class="n">Service</span><span class="p">{</span><span class="x">
    </span><span class="n">TypeMeta</span><span class="o">:</span><span class="x"> </span><span class="n">unversioned</span><span class="o">.</span><span class="n">TypeMeta</span><span class="p">{</span><span class="x">
      </span><span class="n">Kind</span><span class="o">:</span><span class="x">       </span><span class="s">"Service"</span><span class="p">,</span><span class="x">
      </span><span class="n">APIVersion</span><span class="o">:</span><span class="x"> </span><span class="s">"v1"</span><span class="p">,</span><span class="x">
    </span><span class="p">},</span><span class="x">
    </span><span class="n">ObjectMeta</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">ObjectMeta</span><span class="p">{</span><span class="x">
      </span><span class="n">Name</span><span class="o">:</span><span class="x"> </span><span class="n">appName</span><span class="p">,</span><span class="x">
    </span><span class="p">},</span><span class="x">
    </span><span class="n">Spec</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">ServiceSpec</span><span class="p">{</span><span class="x">
      </span><span class="n">Type</span><span class="o">:</span><span class="x">     </span><span class="n">v1</span><span class="o">.</span><span class="n">ServiceTypeClusterIP</span><span class="p">,</span><span class="x">
      </span><span class="n">Selector</span><span class="o">:</span><span class="x"> </span><span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">string</span><span class="p">{</span><span class="s">"app"</span><span class="o">:</span><span class="x"> </span><span class="n">appName</span><span class="p">},</span><span class="x">
      </span><span class="n">Ports</span><span class="o">:</span><span class="x"> </span><span class="p">[]</span><span class="n">v1</span><span class="o">.</span><span class="n">ServicePort</span><span class="p">{</span><span class="x">
        </span><span class="n">v1</span><span class="o">.</span><span class="n">ServicePort</span><span class="p">{</span><span class="x">
          </span><span class="n">Protocol</span><span class="o">:</span><span class="x"> </span><span class="n">v1</span><span class="o">.</span><span class="n">ProtocolTCP</span><span class="p">,</span><span class="x">
          </span><span class="n">Port</span><span class="o">:</span><span class="x">     </span><span class="m">80</span><span class="p">,</span><span class="x">
          </span><span class="n">TargetPort</span><span class="o">:</span><span class="x"> </span><span class="n">intstr</span><span class="o">.</span><span class="n">IntOrString</span><span class="p">{</span><span class="x">
            </span><span class="n">Type</span><span class="o">:</span><span class="x">   </span><span class="n">intstr</span><span class="o">.</span><span class="n">Int</span><span class="p">,</span><span class="x">
            </span><span class="n">IntVal</span><span class="o">:</span><span class="x"> </span><span class="kt">int32</span><span class="p">(</span><span class="n">op</span><span class="o">.</span><span class="n">port</span><span class="p">),</span><span class="x">
          </span><span class="p">},</span><span class="x">
        </span><span class="p">},</span><span class="x">
      </span><span class="p">},</span><span class="x">
    </span><span class="p">},</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="n">service</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">clientSet</span><span class="o">.</span><span class="n">Core</span><span class="p">()</span><span class="o">.</span><span class="n">Services</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">namespace</span><span class="p">)</span><span class="x">
  </span><span class="n">svc</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">service</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="n">appName</span><span class="p">)</span><span class="x">
  </span><span class="k">switch</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">==</span><span class="x"> </span><span class="no">nil</span><span class="o">:</span><span class="x">
    </span><span class="n">serviceSpec</span><span class="o">.</span><span class="n">ObjectMeta</span><span class="o">.</span><span class="n">ResourceVersion</span><span class="x"> </span><span class="o">=</span><span class="x"> </span><span class="n">svc</span><span class="o">.</span><span class="n">ObjectMeta</span><span class="o">.</span><span class="n">ResourceVersion</span><span class="x">
    </span><span class="n">serviceSpec</span><span class="o">.</span><span class="n">Spec</span><span class="o">.</span><span class="n">ClusterIP</span><span class="x"> </span><span class="o">=</span><span class="x"> </span><span class="n">svc</span><span class="o">.</span><span class="n">Spec</span><span class="o">.</span><span class="n">ClusterIP</span><span class="x">
    </span><span class="n">_</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">=</span><span class="x"> </span><span class="n">service</span><span class="o">.</span><span class="n">Update</span><span class="p">(</span><span class="n">serviceSpec</span><span class="p">)</span><span class="x">
    </span><span class="k">if</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">!=</span><span class="x"> </span><span class="no">nil</span><span class="x"> </span><span class="p">{</span><span class="x">
      </span><span class="k">return</span><span class="x"> </span><span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"failed to update service: %s"</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="p">)</span><span class="x">
    </span><span class="p">}</span><span class="x">
    </span><span class="n">log</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"service updated"</span><span class="p">)</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="n">errors</span><span class="o">.</span><span class="n">IsNotFound</span><span class="p">(</span><span class="n">err</span><span class="p">)</span><span class="o">:</span><span class="x">
    </span><span class="n">_</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">=</span><span class="x"> </span><span class="n">service</span><span class="o">.</span><span class="n">Create</span><span class="p">(</span><span class="n">serviceSpec</span><span class="p">)</span><span class="x">
    </span><span class="k">if</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">!=</span><span class="x"> </span><span class="no">nil</span><span class="x"> </span><span class="p">{</span><span class="x">
      </span><span class="k">return</span><span class="x"> </span><span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"failed to create service: %s"</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="p">)</span><span class="x">
    </span><span class="p">}</span><span class="x">
    </span><span class="n">log</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="s">"service created"</span><span class="p">)</span><span class="x">
  </span><span class="k">default</span><span class="o">:</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"unexpected error: %s"</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="p">)</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Util function to return an int32 pointer (Kubernetes API specific functionality)</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="n">int32p</span><span class="p">(</span><span class="n">i</span><span class="x"> </span><span class="kt">int32</span><span class="p">)</span><span class="x"> </span><span class="o">*</span><span class="kt">int32</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="k">return</span><span class="x"> </span><span class="o">&amp;</span><span class="n">i</span><span class="x">
</span><span class="p">}</span><span class="x">
</span></code></pre>
</div>

<h2 id="deleter">Deleter</h2>

<p>The <code class="highlighter-rouge">Deleter</code> interface is super simple, just like an unqiue delete operation on any kind of system.</p>

<p><em>Note: there is one nuance that when deleting a deployment you must first scale down the replica set to 0 replicas. This issue is noted here in <a href="https://github.com/kubernetes/client-go/issues/50">Github</a>.</em></p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="c">// Model of a delete operation. Must take the unique application name to select</span><span class="x">
</span><span class="c">// the correct application we created already in the cluster.</span><span class="x">
</span><span class="k">type</span><span class="x"> </span><span class="n">deleteOperation</span><span class="x"> </span><span class="k">struct</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="n">name</span><span class="x">       </span><span class="kt">string</span><span class="x">
  </span><span class="n">deleteOpts</span><span class="x"> </span><span class="o">*</span><span class="n">v1</span><span class="o">.</span><span class="n">DeleteOptions</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Delete will delete a service and a deployment with a unique name for the</span><span class="x">
</span><span class="c">// deployment and service.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="p">(</span><span class="n">m</span><span class="x"> </span><span class="o">*</span><span class="n">Manager</span><span class="p">)</span><span class="x"> </span><span class="n">Delete</span><span class="p">(</span><span class="n">name</span><span class="x"> </span><span class="kt">string</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="n">op</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="o">&amp;</span><span class="n">deleteOperation</span><span class="p">{</span><span class="x">
    </span><span class="n">name</span><span class="o">:</span><span class="x"> </span><span class="n">name</span><span class="p">,</span><span class="x">
    </span><span class="n">deleteOpts</span><span class="o">:</span><span class="x"> </span><span class="o">&amp;</span><span class="n">v1</span><span class="o">.</span><span class="n">DeleteOptions</span><span class="p">{</span><span class="x">
      </span><span class="n">GracePeriodSeconds</span><span class="o">:</span><span class="x"> </span><span class="n">int64p</span><span class="p">(</span><span class="m">0</span><span class="p">),</span><span class="x">
      </span><span class="n">OrphanDependents</span><span class="o">:</span><span class="x">   </span><span class="n">boolp</span><span class="p">(</span><span class="no">true</span><span class="p">),</span><span class="x">
    </span><span class="p">},</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">if</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">doDeleteDeployment</span><span class="p">(</span><span class="n">op</span><span class="p">);</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">!=</span><span class="x"> </span><span class="no">nil</span><span class="x"> </span><span class="p">{</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="n">err</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">if</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">doDeleteService</span><span class="p">(</span><span class="n">op</span><span class="p">);</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">!=</span><span class="x"> </span><span class="no">nil</span><span class="x"> </span><span class="p">{</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="n">err</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Delete a deployment within a namespace.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="p">(</span><span class="n">m</span><span class="x"> </span><span class="o">*</span><span class="n">Manager</span><span class="p">)</span><span class="x"> </span><span class="n">doDeleteDeployment</span><span class="p">(</span><span class="n">op</span><span class="x"> </span><span class="o">*</span><span class="n">deleteOperation</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x"> </span><span class="p">{</span><span class="x">

  </span><span class="n">appName</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">op</span><span class="o">.</span><span class="n">name</span><span class="x">

  </span><span class="n">deploy</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">clientSet</span><span class="o">.</span><span class="n">Extensions</span><span class="p">()</span><span class="o">.</span><span class="n">Deployments</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">namespace</span><span class="p">)</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="n">appName</span><span class="p">)</span><span class="x">
  </span><span class="k">if</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">==</span><span class="x"> </span><span class="no">nil</span><span class="x"> </span><span class="p">{</span><span class="x">
    </span><span class="c">// scale deployment to 0</span><span class="x">
    </span><span class="c">// issue: https://github.com/kubernetes/client-go/issues/50</span><span class="x">
    </span><span class="n">replicas</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">int32p</span><span class="p">(</span><span class="m">0</span><span class="p">)</span><span class="x">
    </span><span class="n">deploy</span><span class="o">.</span><span class="n">Spec</span><span class="o">.</span><span class="n">Replicas</span><span class="x"> </span><span class="o">=</span><span class="x"> </span><span class="n">replicas</span><span class="x">
    </span><span class="n">_</span><span class="p">,</span><span class="x"> </span><span class="n">_</span><span class="x"> </span><span class="o">=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">clientSet</span><span class="o">.</span><span class="n">Extensions</span><span class="p">()</span><span class="o">.</span><span class="n">Deployments</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">namespace</span><span class="p">)</span><span class="o">.</span><span class="n">Update</span><span class="p">(</span><span class="n">deploy</span><span class="p">)</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="n">err</span><span class="x"> </span><span class="o">=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">clientSet</span><span class="o">.</span><span class="n">Extensions</span><span class="p">()</span><span class="o">.</span><span class="n">Deployments</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">namespace</span><span class="p">)</span><span class="o">.</span><span class="n">Delete</span><span class="p">(</span><span class="n">appName</span><span class="p">,</span><span class="x"> </span><span class="n">op</span><span class="o">.</span><span class="n">deleteOpts</span><span class="p">)</span><span class="x">
  </span><span class="k">switch</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">==</span><span class="x"> </span><span class="no">nil</span><span class="o">:</span><span class="x">
    </span><span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"%s deployment deleted</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="x"> </span><span class="n">appName</span><span class="p">)</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="o">!</span><span class="n">errors</span><span class="o">.</span><span class="n">IsNotFound</span><span class="p">(</span><span class="n">err</span><span class="p">)</span><span class="o">:</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"could not delete deployment controller: %s"</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="p">)</span><span class="x">
  </span><span class="k">default</span><span class="o">:</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
  </span><span class="p">}</span><span class="x">
  </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Delete a service within a namespace.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="p">(</span><span class="n">m</span><span class="x"> </span><span class="o">*</span><span class="n">Manager</span><span class="p">)</span><span class="x"> </span><span class="n">doDeleteService</span><span class="p">(</span><span class="n">op</span><span class="x"> </span><span class="o">*</span><span class="n">deleteOperation</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x"> </span><span class="p">{</span><span class="x">

  </span><span class="n">appName</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">op</span><span class="o">.</span><span class="n">name</span><span class="x">

  </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">clientSet</span><span class="o">.</span><span class="n">Core</span><span class="p">()</span><span class="o">.</span><span class="n">Services</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">namespace</span><span class="p">)</span><span class="o">.</span><span class="n">Delete</span><span class="p">(</span><span class="n">appName</span><span class="p">,</span><span class="x"> </span><span class="n">op</span><span class="o">.</span><span class="n">deleteOpts</span><span class="p">)</span><span class="x">
  </span><span class="k">switch</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">==</span><span class="x"> </span><span class="no">nil</span><span class="o">:</span><span class="x">
    </span><span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"%s service deleted</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="x"> </span><span class="n">appName</span><span class="p">)</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="o">!</span><span class="n">errors</span><span class="o">.</span><span class="n">IsNotFound</span><span class="p">(</span><span class="n">err</span><span class="p">)</span><span class="o">:</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"could not delete service: %s"</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="p">)</span><span class="x">
  </span><span class="k">default</span><span class="o">:</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Util function to return an int64 pointer.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="n">int64p</span><span class="p">(</span><span class="n">i</span><span class="x"> </span><span class="kt">int64</span><span class="p">)</span><span class="x"> </span><span class="o">*</span><span class="kt">int64</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="k">return</span><span class="x"> </span><span class="o">&amp;</span><span class="n">i</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Util function to return a boolean pointer.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="n">boolp</span><span class="p">(</span><span class="n">b</span><span class="x"> </span><span class="kt">bool</span><span class="p">)</span><span class="x"> </span><span class="o">*</span><span class="kt">bool</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="k">return</span><span class="x"> </span><span class="o">&amp;</span><span class="n">b</span><span class="x">
</span><span class="p">}</span><span class="x">
</span></code></pre>
</div>

<h2 id="getter">Getter</h2>

<p>After we create and delete – we might want at least see what sort of applications we have deployed with our Manager. We can implement a basic <code class="highlighter-rouge">Get</code> method to select an application and see if it’s there in the cluster running. We can do a lot more with this kind of idea later, but for now I am just making sure the deployment is there.</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="c">// Model of a get deployment operation. The name is a unique identifier for an</span><span class="x">
</span><span class="c">// application.</span><span class="x">
</span><span class="k">type</span><span class="x"> </span><span class="n">getOperation</span><span class="x"> </span><span class="k">struct</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="n">name</span><span class="x"> </span><span class="kt">string</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Get will get a deployment for a specific deployment/service pair. If it is not</span><span class="x">
</span><span class="c">// present then return with an error.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="p">(</span><span class="n">m</span><span class="x"> </span><span class="o">*</span><span class="n">Manager</span><span class="p">)</span><span class="x"> </span><span class="n">Get</span><span class="p">(</span><span class="n">name</span><span class="x"> </span><span class="kt">string</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x"> </span><span class="p">{</span><span class="x">

  </span><span class="n">op</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="o">&amp;</span><span class="n">getOperation</span><span class="p">{</span><span class="x">
    </span><span class="n">name</span><span class="o">:</span><span class="x"> </span><span class="n">name</span><span class="p">,</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">if</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">doGetDeployment</span><span class="p">(</span><span class="n">op</span><span class="p">);</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">!=</span><span class="x"> </span><span class="no">nil</span><span class="x"> </span><span class="p">{</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="n">err</span><span class="x">
  </span><span class="p">}</span><span class="x">

  </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
</span><span class="p">}</span><span class="x">

</span><span class="c">// Get a deployment method.</span><span class="x">
</span><span class="k">func</span><span class="x"> </span><span class="p">(</span><span class="n">m</span><span class="x"> </span><span class="o">*</span><span class="n">Manager</span><span class="p">)</span><span class="x"> </span><span class="n">doGetDeployment</span><span class="p">(</span><span class="n">op</span><span class="x"> </span><span class="o">*</span><span class="n">getOperation</span><span class="p">)</span><span class="x"> </span><span class="kt">error</span><span class="x"> </span><span class="p">{</span><span class="x">

  </span><span class="n">appName</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">op</span><span class="o">.</span><span class="n">name</span><span class="x">

  </span><span class="n">_</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">m</span><span class="o">.</span><span class="n">clientSet</span><span class="o">.</span><span class="n">Extensions</span><span class="p">()</span><span class="o">.</span><span class="n">Deployments</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">namespace</span><span class="p">)</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="n">appName</span><span class="p">)</span><span class="x">
  </span><span class="k">switch</span><span class="x"> </span><span class="p">{</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">==</span><span class="x"> </span><span class="no">nil</span><span class="o">:</span><span class="x">
    </span><span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"%s deployment found</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="x"> </span><span class="n">appName</span><span class="p">)</span><span class="x">
  </span><span class="k">case</span><span class="x"> </span><span class="o">!</span><span class="n">errors</span><span class="o">.</span><span class="n">IsNotFound</span><span class="p">(</span><span class="n">err</span><span class="p">)</span><span class="o">:</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="n">fmt</span><span class="o">.</span><span class="n">Errorf</span><span class="p">(</span><span class="s">"could not get deployment controller: %s"</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="p">)</span><span class="x">
  </span><span class="k">default</span><span class="o">:</span><span class="x">
    </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
  </span><span class="p">}</span><span class="x">
  </span><span class="k">return</span><span class="x"> </span><span class="no">nil</span><span class="x">
</span><span class="p">}</span><span class="x">
</span></code></pre>
</div>

<hr />

<p><img src="./../assets/images/super-happy.jpg" alt="super-happy" /></p>

<h2 id="conclusion">Conclusion</h2>

<p>We should have a very basic Manager that implements the Controller interface we defined. This can be super robust later on, but for now we have a very simple to understand way to create, delete and retrieve information about our applications in a Kubernetes’ namespace.</p>

	  ]]></description>
	</item>


</channel>
</rss>
